de iterative checker!!
 ########## Equivalence Checking for <output1: null_action, output2: enc_pause_resp> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- LTL specification  G !((input = enc_plain_pause_req & ue_nas1_action = null_action) & ue_nas2_action = enc_pause_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = pair_keyboard_display_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T29 = TRUE
    UE_NAS2_T17 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T17 = FALSE
  -> State: 1.4 <-
    input = enc_plain_pause_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    ue_nas2_action = pair_resp
    ue_nas2_state = smp_s1
    UE_NAS2_T67 = TRUE
    UE_NAS2_T29 = FALSE
    UE_NAS1_T20 = FALSE
  -> State: 1.5 <-
    ue_nas1_action = null_action
    ue_nas2_action = enc_pause_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T67 = FALSE
  -> State: 1.6 <-
    input = pair_req
    ue_nas2_action = null_action
    UE_NAS2_T28 = TRUE
    UE_NAS1_T39 = TRUE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'smp_s1')
('pair_resp', 'pair_resp')
enc_plain_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s2')
('null_action', 'enc_pause_resp')
enc_plain_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s2')
('null_action', 'null_action')
pair_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('pair_resp', 'pair_resp')
smp_s1
smp_s1
('null_action', 'enc_pause_resp')
smp_s1
ll_s2
#### offen_state =3 #######
('null_action', 'enc_pause_resp')
enc_plain_pause_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
enc_plain_pause_req
input list
['con_req', 'version_req', 'pair_keyboard_display_req', 'enc_plain_pause_req']
enc_plain_pause_req
output_list line 448:
[con_req version_req pair_keyboard_display_req enc_plain_pause_req / null_action version_resp pair_resp null_action] [con_req version_req pair_keyboard_display_req enc_plain_pause_req / null_action version_resp pair_resp enc_pause_resp]
smp_s1
ll_s2
enc_plain_pause_req
enc_pause_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

$$$$$$$$$$$$$$$$$$$$$$^^^^^^^^^^^^^^^^^^^
	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

$$$$$$$$$$$$$$$$
	smp_s1 -> ll_s2 [label="enc_plain_pause_req / null_action"];

$$$$$$$$$$$$$$$$$$$$$$<<<<<<<<<<<<<<<<<<<<<<
	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- LTL specification  G !((input = enc_plain_pause_req & ue_nas1_action = null_action) & ue_nas2_action = enc_pause_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T7 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = pair_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T28 = TRUE
    UE_NAS2_T17 = FALSE
    UE_NAS1_T19 = TRUE
    UE_NAS1_T17 = FALSE
  -> State: 1.4 <-
    input = key_exchange
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    ue_nas2_action = pair_resp
    ue_nas2_state = smp_s1
    UE_NAS2_T56 = TRUE
    UE_NAS2_T28 = FALSE
    UE_NAS1_T47 = TRUE
    UE_NAS1_T19 = FALSE
  -> State: 1.5 <-
    input = enc_plain_pause_req
    ue_nas1_state = smp_s2
    ue_nas1_action = public_key_response_sm_confirm
    ue_nas2_action = public_key_response_sm_confirm
    ue_nas2_state = smp_s2
    UE_NAS2_T87 = TRUE
    UE_NAS2_T56 = FALSE
    UE_NAS1_T47 = FALSE
  -> State: 1.6 <-
    ue_nas1_action = null_action
    ue_nas2_action = enc_pause_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T87 = FALSE
  -> State: 1.7 <-
    input = pair_keyboard_display_req
    ue_nas2_action = null_action
    UE_NAS2_T29 = TRUE
    UE_NAS1_T60 = TRUE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
pair_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'smp_s1')
('pair_resp', 'pair_resp')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'smp_s2')
('public_key_response_sm_confirm', 'public_key_response_sm_confirm')
enc_plain_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'll_s2')
('null_action', 'enc_pause_resp')
enc_plain_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'll_s2')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('pair_resp', 'pair_resp')
smp_s1
smp_s1
('public_key_response_sm_confirm', 'public_key_response_sm_confirm')
smp_s2
smp_s2
('null_action', 'enc_pause_resp')
smp_s2
ll_s2
#### offen_state =4 #######
('null_action', 'enc_pause_resp')
enc_plain_pause_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
enc_plain_pause_req
input list
['con_timeout_zero_req', 'version_req', 'pair_req', 'key_exchange', 'enc_plain_pause_req']
enc_plain_pause_req
output_list line 448:
[con_timeout_zero_req version_req pair_req key_exchange enc_plain_pause_req / null_action version_resp pair_resp public_key_response_sm_confirm null_action] [con_timeout_zero_req version_req pair_req key_exchange enc_plain_pause_req / null_action version_resp pair_resp public_key_response_sm_confirm enc_pause_resp]
smp_s2
ll_s2
enc_plain_pause_req
enc_pause_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

$$$$$$$$$$$$$$$$$$$$$$^^^^^^^^^^^^^^^^^^^
	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

$$$$$$$$$$$$$$$$
	smp_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

$$$$$$$$$$$$$$$$$$$$$$<<<<<<<<<<<<<<<<<<<<<<
	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- no proof or counterexample found with bound 9
-- LTL specification  G !((input = enc_plain_pause_req & ue_nas1_action = null_action) & ue_nas2_action = enc_pause_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T7 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = pair_keyboard_display_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T29 = TRUE
    UE_NAS2_T17 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T17 = FALSE
  -> State: 1.4 <-
    input = key_exchange
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    ue_nas2_action = pair_resp
    ue_nas2_state = smp_s1
    UE_NAS2_T56 = TRUE
    UE_NAS2_T29 = FALSE
    UE_NAS1_T47 = TRUE
    UE_NAS1_T20 = FALSE
  -> State: 1.5 <-
    input = sm_random_send
    ue_nas1_state = smp_s2
    ue_nas1_action = public_key_response_sm_confirm
    ue_nas2_action = public_key_response_sm_confirm
    ue_nas2_state = smp_s2
    UE_NAS2_T77 = TRUE
    UE_NAS2_T56 = FALSE
    UE_NAS1_T68 = TRUE
    UE_NAS1_T47 = FALSE
  -> State: 1.6 <-
    input = enc_plain_pause_req
    ue_nas1_state = smp_s3
    ue_nas1_action = sm_random_received
    ue_nas2_action = sm_random_received
    ue_nas2_state = smp_s3
    UE_NAS2_T107 = TRUE
    UE_NAS2_T77 = FALSE
    UE_NAS1_T68 = FALSE
  -> State: 1.7 <-
    ue_nas1_action = null_action
    ue_nas2_action = enc_pause_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T107 = FALSE
  -> State: 1.8 <-
    input = pair_keyboard_display_req
    ue_nas2_action = null_action
    UE_NAS2_T29 = TRUE
    UE_NAS1_T80 = TRUE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'smp_s1')
('pair_resp', 'pair_resp')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'smp_s2')
('public_key_response_sm_confirm', 'public_key_response_sm_confirm')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s3', 'smp_s3')
('sm_random_received', 'sm_random_received')
enc_plain_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s3', 'll_s2')
('null_action', 'enc_pause_resp')
enc_plain_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s3', 'll_s2')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('pair_resp', 'pair_resp')
smp_s1
smp_s1
('public_key_response_sm_confirm', 'public_key_response_sm_confirm')
smp_s2
smp_s2
('sm_random_received', 'sm_random_received')
smp_s3
smp_s3
('null_action', 'enc_pause_resp')
smp_s3
ll_s2
#### offen_state =5 #######
('null_action', 'enc_pause_resp')
enc_plain_pause_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
enc_plain_pause_req
input list
['con_timeout_zero_req', 'version_req', 'pair_keyboard_display_req', 'key_exchange', 'sm_random_send', 'enc_plain_pause_req']
enc_plain_pause_req
output_list line 448:
[con_timeout_zero_req version_req pair_keyboard_display_req key_exchange sm_random_send enc_plain_pause_req / null_action version_resp pair_resp public_key_response_sm_confirm sm_random_received null_action] [con_timeout_zero_req version_req pair_keyboard_display_req key_exchange sm_random_send enc_plain_pause_req / null_action version_resp pair_resp public_key_response_sm_confirm sm_random_received enc_pause_resp]
smp_s3
ll_s2
enc_plain_pause_req
enc_pause_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

$$$$$$$$$$$$$$$$$$$$$$^^^^^^^^^^^^^^^^^^^
	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

$$$$$$$$$$$$$$$$
	smp_s3 -> ll_s2 [label="enc_plain_pause_req / null_action"];

$$$$$$$$$$$$$$$$$$$$$$<<<<<<<<<<<<<<<<<<<<<<
	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- no proof or counterexample found with bound 9
-- no proof or counterexample found with bound 10
-- LTL specification  G !((input = enc_plain_pause_req & ue_nas1_action = null_action) & ue_nas2_action = enc_pause_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T7 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = pair_keyboard_display_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T29 = TRUE
    UE_NAS2_T17 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T17 = FALSE
  -> State: 1.4 <-
    input = key_exchange
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    ue_nas2_action = pair_resp
    ue_nas2_state = smp_s1
    UE_NAS2_T56 = TRUE
    UE_NAS2_T29 = FALSE
    UE_NAS1_T47 = TRUE
    UE_NAS1_T20 = FALSE
  -> State: 1.5 <-
    input = sm_random_send
    ue_nas1_state = smp_s2
    ue_nas1_action = public_key_response_sm_confirm
    ue_nas2_action = public_key_response_sm_confirm
    ue_nas2_state = smp_s2
    UE_NAS2_T77 = TRUE
    UE_NAS2_T56 = FALSE
    UE_NAS1_T68 = TRUE
    UE_NAS1_T47 = FALSE
  -> State: 1.6 <-
    input = discon_req
    ue_nas1_state = smp_s3
    ue_nas1_action = sm_random_received
    ue_nas2_action = sm_random_received
    ue_nas2_state = smp_s3
    UE_NAS2_T108 = TRUE
    UE_NAS2_T77 = FALSE
    UE_NAS1_T99 = TRUE
    UE_NAS1_T68 = FALSE
  -> State: 1.7 <-
    input = enc_plain_pause_req
    ue_nas1_state = recon_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = recon_s0
    UE_NAS2_T112 = TRUE
    UE_NAS2_T108 = FALSE
    UE_NAS1_T99 = FALSE
  -- Loop starts here
  -> State: 1.8 <-
    ue_nas2_action = enc_pause_resp
  -> State: 1.9 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'smp_s1')
('pair_resp', 'pair_resp')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'smp_s2')
('public_key_response_sm_confirm', 'public_key_response_sm_confirm')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s3', 'smp_s3')
('sm_random_received', 'sm_random_received')
discon_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('recon_s0', 'recon_s0')
('null_action', 'null_action')
enc_plain_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('recon_s0', 'recon_s0')
('null_action', 'enc_pause_resp')
enc_plain_pause_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('pair_resp', 'pair_resp')
smp_s1
smp_s1
('public_key_response_sm_confirm', 'public_key_response_sm_confirm')
smp_s2
smp_s2
('sm_random_received', 'sm_random_received')
smp_s3
smp_s3
('null_action', 'null_action')
recon_s0
recon_s0
('null_action', 'enc_pause_resp')
recon_s0
recon_s0
#### offen_state =6 #######
('null_action', 'enc_pause_resp')
enc_plain_pause_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
enc_plain_pause_req
input list
['con_timeout_zero_req', 'version_req', 'pair_keyboard_display_req', 'key_exchange', 'sm_random_send', 'discon_req', 'enc_plain_pause_req']
enc_plain_pause_req
output_list line 448:
[con_timeout_zero_req version_req pair_keyboard_display_req key_exchange sm_random_send discon_req enc_plain_pause_req / null_action version_resp pair_resp public_key_response_sm_confirm sm_random_received null_action null_action] [con_timeout_zero_req version_req pair_keyboard_display_req key_exchange sm_random_send discon_req enc_plain_pause_req / null_action version_resp pair_resp public_key_response_sm_confirm sm_random_received null_action enc_pause_resp]
recon_s0
recon_s0
enc_plain_pause_req
enc_pause_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

$$$$$$$$$$$$$$$$$$$$$$^^^^^^^^^^^^^^^^^^^
	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

$$$$$$$$$$$$$$$$
	recon_s0 -> recon_s0 [label="enc_plain_pause_req / null_action"];

$$$$$$$$$$$$$$$$$$$$$$<<<<<<<<<<<<<<<<<<<<<<
	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- LTL specification  G !((input = enc_plain_pause_req & ue_nas1_action = null_action) & ue_nas2_action = enc_pause_resp)  is true

out in iterative_checker
['[con_timeout_zero_req version_req pair_keyboard_display_req key_exchange sm_random_send enc_plain_pause_req / null_action version_resp pair_resp public_key_response_sm_confirm sm_random_received null_action] [con_timeout_zero_req version_req pair_keyboard_display_req key_exchange sm_random_send enc_plain_pause_req / null_action version_resp pair_resp public_key_response_sm_confirm sm_random_received enc_pause_resp]', '[con_timeout_zero_req version_req pair_keyboard_display_req key_exchange sm_random_send discon_req enc_plain_pause_req / null_action version_resp pair_resp public_key_response_sm_confirm sm_random_received null_action null_action] [con_timeout_zero_req version_req pair_keyboard_display_req key_exchange sm_random_send discon_req enc_plain_pause_req / null_action version_resp pair_resp public_key_response_sm_confirm sm_random_received null_action enc_pause_resp]', '[con_timeout_zero_req version_req pair_req key_exchange enc_plain_pause_req / null_action version_resp pair_resp public_key_response_sm_confirm null_action] [con_timeout_zero_req version_req pair_req key_exchange enc_plain_pause_req / null_action version_resp pair_resp public_key_response_sm_confirm enc_pause_resp]', '[con_req version_req pair_keyboard_display_req enc_plain_pause_req / null_action version_resp pair_resp null_action] [con_req version_req pair_keyboard_display_req enc_plain_pause_req / null_action version_resp pair_resp enc_pause_resp]']
 ########## Equivalence Checking for <output1: enc_pause_resp, output2: null_action> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- LTL specification  G !((input = enc_plain_pause_req & ue_nas1_action = enc_pause_resp) & ue_nas2_action = null_action)  is true

out in iterative_checker
[]
 ########## Equivalence Checking for <output1: null_action, output2: public_key_response_sm_confirm> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- LTL specification  G !((input = key_invalid_exchange & ue_nas1_action = null_action) & ue_nas2_action = public_key_response_sm_confirm)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = pair_key_zero_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T17 = FALSE
    UE_NAS1_T17 = FALSE
  -> State: 1.4 <-
    input = pair_display_yes_no_req
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    UE_NAS2_T30 = TRUE
    UE_NAS1_T21 = TRUE
  -> State: 1.5 <-
    input = enc_pause_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    ue_nas2_action = pair_resp
    ue_nas2_state = smp_s1
    UE_NAS2_T30 = FALSE
    UE_NAS1_T55 = TRUE
    UE_NAS1_T21 = FALSE
  -> State: 1.6 <-
    input = key_exchange
    ue_nas1_state = ll_s1
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    UE_NAS2_T56 = TRUE
    UE_NAS1_T55 = FALSE
  -> State: 1.7 <-
    input = key_invalid_exchange
    ue_nas2_action = public_key_response_sm_confirm
    ue_nas2_state = smp_s2
    UE_NAS2_T80 = TRUE
    UE_NAS2_T56 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
pair_key_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('null_action', 'null_action')
pair_display_yes_no_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'smp_s1')
('pair_resp', 'pair_resp')
enc_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s1')
('null_action', 'null_action')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s2')
('null_action', 'public_key_response_sm_confirm')
key_invalid_exchange
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('null_action', 'null_action')
ll_s1
ll_s2
('pair_resp', 'pair_resp')
smp_s1
smp_s1
('null_action', 'null_action')
ll_s1
smp_s1
('null_action', 'public_key_response_sm_confirm')
ll_s1
smp_s2
#### offen_state =5 #######
('null_action', 'public_key_response_sm_confirm')
key_exchange
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
key_invalid_exchange
input list
['con_req', 'version_req', 'pair_key_zero_req', 'pair_display_yes_no_req', 'enc_pause_req', 'key_exchange']
key_exchange
ll_s1
smp_s2
key_invalid_exchange
public_key_response_sm_confirm
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- LTL specification  G !((input = key_invalid_exchange & ue_nas1_action = null_action) & ue_nas2_action = public_key_response_sm_confirm)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = pair_key_zero_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T17 = FALSE
    UE_NAS1_T17 = FALSE
  -> State: 1.4 <-
    input = pair_display_yes_no_req
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    UE_NAS2_T30 = TRUE
    UE_NAS1_T21 = TRUE
  -> State: 1.5 <-
    input = enc_pause_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    ue_nas2_action = pair_resp
    ue_nas2_state = smp_s1
    UE_NAS2_T30 = FALSE
    UE_NAS1_T55 = TRUE
    UE_NAS1_T21 = FALSE
  -> State: 1.6 <-
    input = key_exchange
    ue_nas1_state = ll_s1
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    UE_NAS2_T56 = TRUE
    UE_NAS1_T55 = FALSE
  -> State: 1.7 <-
    input = key_invalid_exchange
    ue_nas2_action = public_key_response_sm_confirm
    ue_nas2_state = smp_s2
    UE_NAS2_T80 = TRUE
    UE_NAS2_T56 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
pair_key_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('null_action', 'null_action')
pair_display_yes_no_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'smp_s1')
('pair_resp', 'pair_resp')
enc_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s1')
('null_action', 'null_action')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s2')
('null_action', 'public_key_response_sm_confirm')
key_invalid_exchange
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('null_action', 'null_action')
ll_s1
ll_s2
('pair_resp', 'pair_resp')
smp_s1
smp_s1
('null_action', 'null_action')
ll_s1
smp_s1
('null_action', 'public_key_response_sm_confirm')
ll_s1
smp_s2
#### offen_state =5 #######
('null_action', 'public_key_response_sm_confirm')
key_exchange
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
key_invalid_exchange
input list
['con_req', 'version_req', 'pair_key_zero_req', 'pair_display_yes_no_req', 'enc_pause_req', 'key_exchange']
key_exchange
ll_s1
smp_s2
key_invalid_exchange
public_key_response_sm_confirm
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
[]
 ########## Equivalence Checking for <output1: public_key_response_sm_confirm, output2: null_action> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = key_invalid_exchange & ue_nas1_action = public_key_response_sm_confirm) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T19 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = key_exchange
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS1_T47 = TRUE
    UE_NAS1_T19 = FALSE
  -> State: 1.4 <-
    input = key_invalid_exchange
    ue_nas1_state = smp_s2
    ue_nas1_action = public_key_response_sm_confirm
    UE_NAS1_T47 = FALSE
  -> State: 1.5 <-
    input = pair_oob_req
    ue_nas1_action = null_action
    UE_NAS1_T62 = TRUE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'll_s1')
('public_key_response_sm_confirm', 'null_action')
key_invalid_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'll_s1')
('null_action', 'null_action')
pair_oob_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('public_key_response_sm_confirm', 'null_action')
smp_s2
ll_s1
#### offen_state =2 #######
('public_key_response_sm_confirm', 'null_action')
key_exchange
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
key_invalid_exchange
input list
['con_timeout_zero_req', 'pair_req', 'key_exchange']
key_exchange
smp_s1
ll_s1
key_invalid_exchange
null_action
need to replace to: public_key_response_sm_confirm
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = key_invalid_exchange & ue_nas1_action = public_key_response_sm_confirm) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T19 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = key_exchange
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS1_T47 = TRUE
    UE_NAS1_T19 = FALSE
  -> State: 1.4 <-
    input = key_invalid_exchange
    ue_nas1_state = smp_s2
    ue_nas1_action = public_key_response_sm_confirm
    UE_NAS1_T47 = FALSE
  -> State: 1.5 <-
    input = pair_oob_req
    ue_nas1_action = null_action
    UE_NAS1_T62 = TRUE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'll_s1')
('public_key_response_sm_confirm', 'null_action')
key_invalid_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'll_s1')
('null_action', 'null_action')
pair_oob_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('public_key_response_sm_confirm', 'null_action')
smp_s2
ll_s1
#### offen_state =2 #######
('public_key_response_sm_confirm', 'null_action')
key_exchange
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
key_invalid_exchange
input list
['con_timeout_zero_req', 'pair_req', 'key_exchange']
key_exchange
smp_s1
ll_s1
key_invalid_exchange
null_action
need to replace to: public_key_response_sm_confirm
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
[]
 ########## Equivalence Checking for <output1: null_action, output2: dh_key_response> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- no proof or counterexample found with bound 9
-- no proof or counterexample found with bound 10
-- LTL specification  G !((input = dh_check & ue_nas1_action = null_action) & ue_nas2_action = dh_key_response)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = pair_key_zero_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T17 = FALSE
    UE_NAS1_T17 = FALSE
  -> State: 1.4 <-
    input = pair_display_yes_no_req
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    UE_NAS2_T30 = TRUE
    UE_NAS1_T21 = TRUE
  -> State: 1.5 <-
    input = enc_pause_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    ue_nas2_action = pair_resp
    ue_nas2_state = smp_s1
    UE_NAS2_T30 = FALSE
    UE_NAS1_T55 = TRUE
    UE_NAS1_T21 = FALSE
  -> State: 1.6 <-
    input = key_exchange
    ue_nas1_state = ll_s1
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    UE_NAS2_T56 = TRUE
    UE_NAS1_T55 = FALSE
  -> State: 1.7 <-
    input = sm_random_send
    ue_nas2_action = public_key_response_sm_confirm
    ue_nas2_state = smp_s2
    UE_NAS2_T77 = TRUE
    UE_NAS2_T56 = FALSE
  -> State: 1.8 <-
    input = dh_check
    ue_nas2_action = sm_random_received
    ue_nas2_state = smp_s3
    UE_NAS2_T98 = TRUE
    UE_NAS2_T77 = FALSE
  -> State: 1.9 <-
    ue_nas2_action = dh_key_response
    ue_nas2_state = ll_s2
    UE_NAS2_T98 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
pair_key_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('null_action', 'null_action')
pair_display_yes_no_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'smp_s1')
('pair_resp', 'pair_resp')
enc_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s1')
('null_action', 'null_action')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s2')
('null_action', 'public_key_response_sm_confirm')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s3')
('null_action', 'sm_random_received')
dh_check
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('null_action', 'dh_key_response')
dh_check
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('null_action', 'null_action')
ll_s1
ll_s2
('pair_resp', 'pair_resp')
smp_s1
smp_s1
('null_action', 'null_action')
ll_s1
smp_s1
('null_action', 'public_key_response_sm_confirm')
ll_s1
smp_s2
('null_action', 'sm_random_received')
ll_s1
smp_s3
('null_action', 'dh_key_response')
ll_s1
ll_s2
#### offen_state =7 #######
('null_action', 'dh_key_response')
dh_check
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
dh_check
input list
['con_req', 'version_req', 'pair_key_zero_req', 'pair_display_yes_no_req', 'enc_pause_req', 'key_exchange', 'sm_random_send', 'dh_check']
dh_check
output_list line 448:
[con_req version_req pair_key_zero_req pair_display_yes_no_req enc_pause_req key_exchange sm_random_send dh_check / null_action version_resp null_action pair_resp null_action null_action null_action null_action] [con_req version_req pair_key_zero_req pair_display_yes_no_req enc_pause_req key_exchange sm_random_send dh_check / null_action version_resp null_action pair_resp null_action public_key_response_sm_confirm sm_random_received dh_key_response]
ll_s1
ll_s2
dh_check
dh_key_response
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- no proof or counterexample found with bound 9
-- no proof or counterexample found with bound 10
-- LTL specification  G !((input = dh_check & ue_nas1_action = null_action) & ue_nas2_action = dh_key_response)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = pair_key_zero_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T17 = FALSE
    UE_NAS1_T17 = FALSE
  -> State: 1.4 <-
    input = pair_display_yes_no_req
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    UE_NAS2_T30 = TRUE
    UE_NAS1_T21 = TRUE
  -> State: 1.5 <-
    input = enc_pause_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    ue_nas2_action = pair_resp
    ue_nas2_state = smp_s1
    UE_NAS2_T30 = FALSE
    UE_NAS1_T55 = TRUE
    UE_NAS1_T21 = FALSE
  -> State: 1.6 <-
    input = key_exchange
    ue_nas1_state = ll_s1
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    UE_NAS2_T56 = TRUE
    UE_NAS1_T55 = FALSE
  -> State: 1.7 <-
    input = sm_random_send
    ue_nas2_action = public_key_response_sm_confirm
    ue_nas2_state = smp_s2
    UE_NAS2_T77 = TRUE
    UE_NAS2_T56 = FALSE
  -> State: 1.8 <-
    input = dh_check
    ue_nas2_action = sm_random_received
    ue_nas2_state = smp_s3
    UE_NAS2_T98 = TRUE
    UE_NAS2_T77 = FALSE
  -> State: 1.9 <-
    ue_nas2_action = dh_key_response
    ue_nas2_state = ll_s2
    UE_NAS2_T98 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
pair_key_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('null_action', 'null_action')
pair_display_yes_no_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'smp_s1')
('pair_resp', 'pair_resp')
enc_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s1')
('null_action', 'null_action')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s2')
('null_action', 'public_key_response_sm_confirm')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s3')
('null_action', 'sm_random_received')
dh_check
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('null_action', 'dh_key_response')
dh_check
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('null_action', 'null_action')
ll_s1
ll_s2
('pair_resp', 'pair_resp')
smp_s1
smp_s1
('null_action', 'null_action')
ll_s1
smp_s1
('null_action', 'public_key_response_sm_confirm')
ll_s1
smp_s2
('null_action', 'sm_random_received')
ll_s1
smp_s3
('null_action', 'dh_key_response')
ll_s1
ll_s2
#### offen_state =7 #######
('null_action', 'dh_key_response')
dh_check
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
dh_check
input list
['con_req', 'version_req', 'pair_key_zero_req', 'pair_display_yes_no_req', 'enc_pause_req', 'key_exchange', 'sm_random_send', 'dh_check']
dh_check
output_list line 448:
[con_req version_req pair_key_zero_req pair_display_yes_no_req enc_pause_req key_exchange sm_random_send dh_check / null_action version_resp null_action pair_resp null_action null_action null_action null_action] [con_req version_req pair_key_zero_req pair_display_yes_no_req enc_pause_req key_exchange sm_random_send dh_check / null_action version_resp null_action pair_resp null_action public_key_response_sm_confirm sm_random_received dh_key_response]
ll_s1
ll_s2
dh_check
dh_key_response
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_req version_req pair_key_zero_req pair_display_yes_no_req enc_pause_req key_exchange sm_random_send dh_check / null_action version_resp null_action pair_resp null_action null_action null_action null_action] [con_req version_req pair_key_zero_req pair_display_yes_no_req enc_pause_req key_exchange sm_random_send dh_check / null_action version_resp null_action pair_resp null_action public_key_response_sm_confirm sm_random_received dh_key_response]']
 ########## Equivalence Checking for <output1: dh_key_response, output2: null_action> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- LTL specification  G !((input = dh_check & ue_nas1_action = dh_key_response) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = key_exchange
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS1_T47 = TRUE
    UE_NAS1_T20 = FALSE
  -> State: 1.4 <-
    input = sm_random_send
    ue_nas1_state = smp_s2
    ue_nas1_action = public_key_response_sm_confirm
    UE_NAS1_T68 = TRUE
    UE_NAS1_T47 = FALSE
  -> State: 1.5 <-
    input = dh_check
    ue_nas1_state = smp_s3
    ue_nas1_action = sm_random_received
    UE_NAS1_T89 = TRUE
    UE_NAS1_T68 = FALSE
  -> State: 1.6 <-
    ue_nas1_state = ll_s1
    ue_nas1_action = dh_key_response
    UE_NAS1_T89 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'll_s1')
('public_key_response_sm_confirm', 'null_action')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s3', 'll_s1')
('sm_random_received', 'null_action')
dh_check
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('dh_key_response', 'null_action')
dh_check
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('public_key_response_sm_confirm', 'null_action')
smp_s2
ll_s1
('sm_random_received', 'null_action')
smp_s3
ll_s1
('dh_key_response', 'null_action')
ll_s1
ll_s1
#### offen_state =4 #######
('dh_key_response', 'null_action')
dh_check
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
dh_check
input list
['con_timeout_zero_req', 'pair_keyboard_display_req', 'key_exchange', 'sm_random_send', 'dh_check']
dh_check
output_list line 448:
[con_timeout_zero_req pair_keyboard_display_req key_exchange sm_random_send dh_check / null_action pair_resp public_key_response_sm_confirm sm_random_received dh_key_response] [con_timeout_zero_req pair_keyboard_display_req key_exchange sm_random_send dh_check / null_action null_action null_action null_action null_action]
smp_s3
ll_s1
dh_check
null_action
need to replace to: dh_key_response
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- LTL specification  G !((input = dh_check & ue_nas1_action = dh_key_response) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = key_exchange
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS1_T47 = TRUE
    UE_NAS1_T20 = FALSE
  -> State: 1.4 <-
    input = sm_random_send
    ue_nas1_state = smp_s2
    ue_nas1_action = public_key_response_sm_confirm
    UE_NAS1_T68 = TRUE
    UE_NAS1_T47 = FALSE
  -> State: 1.5 <-
    input = dh_check
    ue_nas1_state = smp_s3
    ue_nas1_action = sm_random_received
    UE_NAS1_T89 = TRUE
    UE_NAS1_T68 = FALSE
  -> State: 1.6 <-
    ue_nas1_state = ll_s1
    ue_nas1_action = dh_key_response
    UE_NAS1_T89 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'll_s1')
('public_key_response_sm_confirm', 'null_action')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s3', 'll_s1')
('sm_random_received', 'null_action')
dh_check
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('dh_key_response', 'null_action')
dh_check
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('public_key_response_sm_confirm', 'null_action')
smp_s2
ll_s1
('sm_random_received', 'null_action')
smp_s3
ll_s1
('dh_key_response', 'null_action')
ll_s1
ll_s1
#### offen_state =4 #######
('dh_key_response', 'null_action')
dh_check
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
dh_check
input list
['con_timeout_zero_req', 'pair_keyboard_display_req', 'key_exchange', 'sm_random_send', 'dh_check']
dh_check
output_list line 448:
[con_timeout_zero_req pair_keyboard_display_req key_exchange sm_random_send dh_check / null_action pair_resp public_key_response_sm_confirm sm_random_received dh_key_response] [con_timeout_zero_req pair_keyboard_display_req key_exchange sm_random_send dh_check / null_action null_action null_action null_action null_action]
smp_s3
ll_s1
dh_check
null_action
need to replace to: dh_key_response
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_timeout_zero_req pair_keyboard_display_req key_exchange sm_random_send dh_check / null_action pair_resp public_key_response_sm_confirm sm_random_received dh_key_response] [con_timeout_zero_req pair_keyboard_display_req key_exchange sm_random_send dh_check / null_action null_action null_action null_action null_action]']
 ########## Equivalence Checking for <output1: null_action, output2: sm_random_received> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- no proof or counterexample found with bound 9
-- LTL specification  G !((input = sm_random_send & ue_nas1_action = null_action) & ue_nas2_action = sm_random_received)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = pair_key_zero_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T17 = FALSE
    UE_NAS1_T17 = FALSE
  -> State: 1.4 <-
    input = pair_keyboard_display_req
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    UE_NAS2_T29 = TRUE
    UE_NAS1_T20 = TRUE
  -> State: 1.5 <-
    input = key_exchange
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    ue_nas2_action = pair_resp
    ue_nas2_state = smp_s1
    UE_NAS2_T56 = TRUE
    UE_NAS2_T29 = FALSE
    UE_NAS1_T47 = TRUE
    UE_NAS1_T20 = FALSE
  -> State: 1.6 <-
    input = enc_pause_req
    ue_nas1_state = smp_s2
    ue_nas1_action = public_key_response_sm_confirm
    ue_nas2_action = public_key_response_sm_confirm
    ue_nas2_state = smp_s2
    UE_NAS2_T56 = FALSE
    UE_NAS1_T75 = TRUE
    UE_NAS1_T47 = FALSE
  -> State: 1.7 <-
    input = sm_random_send
    ue_nas1_state = ll_s1
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    UE_NAS2_T77 = TRUE
    UE_NAS1_T75 = FALSE
  -> State: 1.8 <-
    ue_nas2_action = sm_random_received
    ue_nas2_state = smp_s3
    UE_NAS2_T97 = TRUE
    UE_NAS2_T77 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
pair_key_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'smp_s1')
('pair_resp', 'pair_resp')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'smp_s2')
('public_key_response_sm_confirm', 'public_key_response_sm_confirm')
enc_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s2')
('null_action', 'null_action')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s3')
('null_action', 'sm_random_received')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('null_action', 'null_action')
ll_s1
ll_s2
('pair_resp', 'pair_resp')
smp_s1
smp_s1
('public_key_response_sm_confirm', 'public_key_response_sm_confirm')
smp_s2
smp_s2
('null_action', 'null_action')
ll_s1
smp_s2
('null_action', 'sm_random_received')
ll_s1
smp_s3
#### offen_state =6 #######
('null_action', 'sm_random_received')
sm_random_send
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
sm_random_send
input list
['con_req', 'version_req', 'pair_key_zero_req', 'pair_keyboard_display_req', 'key_exchange', 'enc_pause_req', 'sm_random_send']
sm_random_send
output_list line 448:
[con_req version_req pair_key_zero_req pair_keyboard_display_req key_exchange enc_pause_req sm_random_send / null_action version_resp null_action pair_resp public_key_response_sm_confirm null_action null_action] [con_req version_req pair_key_zero_req pair_keyboard_display_req key_exchange enc_pause_req sm_random_send / null_action version_resp null_action pair_resp public_key_response_sm_confirm null_action sm_random_received]
ll_s1
smp_s3
sm_random_send
sm_random_received
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- no proof or counterexample found with bound 9
-- LTL specification  G !((input = sm_random_send & ue_nas1_action = null_action) & ue_nas2_action = sm_random_received)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = pair_key_zero_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T17 = FALSE
    UE_NAS1_T17 = FALSE
  -> State: 1.4 <-
    input = pair_keyboard_display_req
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    UE_NAS2_T29 = TRUE
    UE_NAS1_T20 = TRUE
  -> State: 1.5 <-
    input = key_exchange
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    ue_nas2_action = pair_resp
    ue_nas2_state = smp_s1
    UE_NAS2_T56 = TRUE
    UE_NAS2_T29 = FALSE
    UE_NAS1_T47 = TRUE
    UE_NAS1_T20 = FALSE
  -> State: 1.6 <-
    input = enc_pause_req
    ue_nas1_state = smp_s2
    ue_nas1_action = public_key_response_sm_confirm
    ue_nas2_action = public_key_response_sm_confirm
    ue_nas2_state = smp_s2
    UE_NAS2_T56 = FALSE
    UE_NAS1_T75 = TRUE
    UE_NAS1_T47 = FALSE
  -> State: 1.7 <-
    input = sm_random_send
    ue_nas1_state = ll_s1
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    UE_NAS2_T77 = TRUE
    UE_NAS1_T75 = FALSE
  -> State: 1.8 <-
    ue_nas2_action = sm_random_received
    ue_nas2_state = smp_s3
    UE_NAS2_T97 = TRUE
    UE_NAS2_T77 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
pair_key_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'smp_s1')
('pair_resp', 'pair_resp')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'smp_s2')
('public_key_response_sm_confirm', 'public_key_response_sm_confirm')
enc_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s2')
('null_action', 'null_action')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s3')
('null_action', 'sm_random_received')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('null_action', 'null_action')
ll_s1
ll_s2
('pair_resp', 'pair_resp')
smp_s1
smp_s1
('public_key_response_sm_confirm', 'public_key_response_sm_confirm')
smp_s2
smp_s2
('null_action', 'null_action')
ll_s1
smp_s2
('null_action', 'sm_random_received')
ll_s1
smp_s3
#### offen_state =6 #######
('null_action', 'sm_random_received')
sm_random_send
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
sm_random_send
input list
['con_req', 'version_req', 'pair_key_zero_req', 'pair_keyboard_display_req', 'key_exchange', 'enc_pause_req', 'sm_random_send']
sm_random_send
output_list line 448:
[con_req version_req pair_key_zero_req pair_keyboard_display_req key_exchange enc_pause_req sm_random_send / null_action version_resp null_action pair_resp public_key_response_sm_confirm null_action null_action] [con_req version_req pair_key_zero_req pair_keyboard_display_req key_exchange enc_pause_req sm_random_send / null_action version_resp null_action pair_resp public_key_response_sm_confirm null_action sm_random_received]
ll_s1
smp_s3
sm_random_send
sm_random_received
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_req version_req pair_key_zero_req pair_keyboard_display_req key_exchange enc_pause_req sm_random_send / null_action version_resp null_action pair_resp public_key_response_sm_confirm null_action null_action] [con_req version_req pair_key_zero_req pair_keyboard_display_req key_exchange enc_pause_req sm_random_send / null_action version_resp null_action pair_resp public_key_response_sm_confirm null_action sm_random_received]']
 ########## Equivalence Checking for <output1: sm_random_received, output2: null_action> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- LTL specification  G !((input = sm_random_send & ue_nas1_action = sm_random_received) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T5 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = key_invalid_exchange
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS1_T51 = TRUE
    UE_NAS1_T20 = FALSE
  -> State: 1.4 <-
    input = sm_random_send
    ue_nas1_state = smp_s2
    ue_nas1_action = public_key_response_sm_confirm
    UE_NAS1_T68 = TRUE
    UE_NAS1_T51 = FALSE
  -> State: 1.5 <-
    ue_nas1_state = smp_s3
    ue_nas1_action = sm_random_received
    UE_NAS1_T68 = FALSE
  -> State: 1.6 <-
    input = pair_keyboard_display_req
    ue_nas1_action = null_action
    UE_NAS1_T80 = TRUE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
key_invalid_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'll_s1')
('public_key_response_sm_confirm', 'null_action')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s3', 'll_s1')
('sm_random_received', 'null_action')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s3', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('public_key_response_sm_confirm', 'null_action')
smp_s2
ll_s1
('sm_random_received', 'null_action')
smp_s3
ll_s1
#### offen_state =3 #######
('sm_random_received', 'null_action')
sm_random_send
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
sm_random_send
input list
['con_req', 'pair_keyboard_display_req', 'key_invalid_exchange', 'sm_random_send']
sm_random_send
output_list line 448:
[con_req pair_keyboard_display_req key_invalid_exchange sm_random_send / null_action pair_resp public_key_response_sm_confirm sm_random_received] [con_req pair_keyboard_display_req key_invalid_exchange sm_random_send / null_action null_action null_action null_action]
smp_s2
ll_s1
sm_random_send
null_action
need to replace to: sm_random_received
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- LTL specification  G !((input = sm_random_send & ue_nas1_action = sm_random_received) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T5 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = key_invalid_exchange
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS1_T51 = TRUE
    UE_NAS1_T20 = FALSE
  -> State: 1.4 <-
    input = sm_random_send
    ue_nas1_state = smp_s2
    ue_nas1_action = public_key_response_sm_confirm
    UE_NAS1_T68 = TRUE
    UE_NAS1_T51 = FALSE
  -> State: 1.5 <-
    ue_nas1_state = smp_s3
    ue_nas1_action = sm_random_received
    UE_NAS1_T68 = FALSE
  -> State: 1.6 <-
    input = pair_keyboard_display_req
    ue_nas1_action = null_action
    UE_NAS1_T80 = TRUE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
key_invalid_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'll_s1')
('public_key_response_sm_confirm', 'null_action')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s3', 'll_s1')
('sm_random_received', 'null_action')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s3', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('public_key_response_sm_confirm', 'null_action')
smp_s2
ll_s1
('sm_random_received', 'null_action')
smp_s3
ll_s1
#### offen_state =3 #######
('sm_random_received', 'null_action')
sm_random_send
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
sm_random_send
input list
['con_req', 'pair_keyboard_display_req', 'key_invalid_exchange', 'sm_random_send']
sm_random_send
output_list line 448:
[con_req pair_keyboard_display_req key_invalid_exchange sm_random_send / null_action pair_resp public_key_response_sm_confirm sm_random_received] [con_req pair_keyboard_display_req key_invalid_exchange sm_random_send / null_action null_action null_action null_action]
smp_s2
ll_s1
sm_random_send
null_action
need to replace to: sm_random_received
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_req pair_keyboard_display_req key_invalid_exchange sm_random_send / null_action pair_resp public_key_response_sm_confirm sm_random_received] [con_req pair_keyboard_display_req key_invalid_exchange sm_random_send / null_action null_action null_action null_action]']
 ########## Equivalence Checking for <output1: null_action, output2: public_key_response_sm_confirm> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- LTL specification  G !((input = key_exchange & ue_nas1_action = null_action) & ue_nas2_action = public_key_response_sm_confirm)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T7 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = pair_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T28 = TRUE
    UE_NAS2_T17 = FALSE
    UE_NAS1_T19 = TRUE
    UE_NAS1_T17 = FALSE
  -> State: 1.4 <-
    input = enc_pause_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    ue_nas2_action = pair_resp
    ue_nas2_state = smp_s1
    UE_NAS2_T28 = FALSE
    UE_NAS1_T55 = TRUE
    UE_NAS1_T19 = FALSE
  -> State: 1.5 <-
    input = key_exchange
    ue_nas1_state = ll_s1
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    UE_NAS2_T56 = TRUE
    UE_NAS1_T55 = FALSE
  -> State: 1.6 <-
    ue_nas2_action = public_key_response_sm_confirm
    ue_nas2_state = smp_s2
    UE_NAS2_T76 = TRUE
    UE_NAS2_T56 = FALSE
  -> State: 1.7 <-
    input = pair_keyboard_display_req
    ue_nas2_action = null_action
    ue_nas2_state = ll_s2
    UE_NAS2_T76 = FALSE
    UE_NAS2_T29 = TRUE
    UE_NAS1_T20 = TRUE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
pair_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'smp_s1')
('pair_resp', 'pair_resp')
enc_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s1')
('null_action', 'null_action')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s2')
('null_action', 'public_key_response_sm_confirm')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('pair_resp', 'pair_resp')
smp_s1
smp_s1
('null_action', 'null_action')
ll_s1
smp_s1
('null_action', 'public_key_response_sm_confirm')
ll_s1
smp_s2
#### offen_state =4 #######
('null_action', 'public_key_response_sm_confirm')
key_exchange
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
key_exchange
input list
['con_timeout_zero_req', 'version_req', 'pair_req', 'enc_pause_req', 'key_exchange']
key_exchange
output_list line 448:
[con_timeout_zero_req version_req pair_req enc_pause_req key_exchange / null_action version_resp pair_resp null_action null_action] [con_timeout_zero_req version_req pair_req enc_pause_req key_exchange / null_action version_resp pair_resp null_action public_key_response_sm_confirm]
ll_s1
smp_s2
key_exchange
public_key_response_sm_confirm
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- LTL specification  G !((input = key_exchange & ue_nas1_action = null_action) & ue_nas2_action = public_key_response_sm_confirm)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T7 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = pair_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T28 = TRUE
    UE_NAS2_T17 = FALSE
    UE_NAS1_T19 = TRUE
    UE_NAS1_T17 = FALSE
  -> State: 1.4 <-
    input = enc_pause_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    ue_nas2_action = pair_resp
    ue_nas2_state = smp_s1
    UE_NAS2_T28 = FALSE
    UE_NAS1_T55 = TRUE
    UE_NAS1_T19 = FALSE
  -> State: 1.5 <-
    input = key_exchange
    ue_nas1_state = ll_s1
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    UE_NAS2_T56 = TRUE
    UE_NAS1_T55 = FALSE
  -> State: 1.6 <-
    ue_nas2_action = public_key_response_sm_confirm
    ue_nas2_state = smp_s2
    UE_NAS2_T76 = TRUE
    UE_NAS2_T56 = FALSE
  -> State: 1.7 <-
    input = pair_keyboard_display_req
    ue_nas2_action = null_action
    ue_nas2_state = ll_s2
    UE_NAS2_T76 = FALSE
    UE_NAS2_T29 = TRUE
    UE_NAS1_T20 = TRUE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
pair_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'smp_s1')
('pair_resp', 'pair_resp')
enc_pause_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s1')
('null_action', 'null_action')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'smp_s2')
('null_action', 'public_key_response_sm_confirm')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('pair_resp', 'pair_resp')
smp_s1
smp_s1
('null_action', 'null_action')
ll_s1
smp_s1
('null_action', 'public_key_response_sm_confirm')
ll_s1
smp_s2
#### offen_state =4 #######
('null_action', 'public_key_response_sm_confirm')
key_exchange
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
key_exchange
input list
['con_timeout_zero_req', 'version_req', 'pair_req', 'enc_pause_req', 'key_exchange']
key_exchange
output_list line 448:
[con_timeout_zero_req version_req pair_req enc_pause_req key_exchange / null_action version_resp pair_resp null_action null_action] [con_timeout_zero_req version_req pair_req enc_pause_req key_exchange / null_action version_resp pair_resp null_action public_key_response_sm_confirm]
ll_s1
smp_s2
key_exchange
public_key_response_sm_confirm
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_timeout_zero_req version_req pair_req enc_pause_req key_exchange / null_action version_resp pair_resp null_action null_action] [con_timeout_zero_req version_req pair_req enc_pause_req key_exchange / null_action version_resp pair_resp null_action public_key_response_sm_confirm]']
 ########## Equivalence Checking for <output1: public_key_response_sm_confirm, output2: null_action> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = key_exchange & ue_nas1_action = public_key_response_sm_confirm) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T19 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = key_exchange
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS1_T47 = TRUE
    UE_NAS1_T19 = FALSE
  -> State: 1.4 <-
    ue_nas1_state = smp_s2
    ue_nas1_action = public_key_response_sm_confirm
    UE_NAS1_T47 = FALSE
  -> State: 1.5 <-
    input = pair_oob_req
    ue_nas1_action = null_action
    UE_NAS1_T62 = TRUE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'll_s1')
('public_key_response_sm_confirm', 'null_action')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'll_s1')
('null_action', 'null_action')
pair_oob_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('public_key_response_sm_confirm', 'null_action')
smp_s2
ll_s1
#### offen_state =2 #######
('public_key_response_sm_confirm', 'null_action')
key_exchange
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
key_exchange
input list
['con_timeout_zero_req', 'pair_req', 'key_exchange']
key_exchange
output_list line 448:
[con_timeout_zero_req pair_req key_exchange / null_action pair_resp public_key_response_sm_confirm] [con_timeout_zero_req pair_req key_exchange / null_action null_action null_action]
smp_s1
ll_s1
key_exchange
null_action
need to replace to: public_key_response_sm_confirm
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = key_exchange & ue_nas1_action = public_key_response_sm_confirm) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T19 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = key_exchange
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS1_T47 = TRUE
    UE_NAS1_T19 = FALSE
  -> State: 1.4 <-
    ue_nas1_state = smp_s2
    ue_nas1_action = public_key_response_sm_confirm
    UE_NAS1_T47 = FALSE
  -> State: 1.5 <-
    input = pair_oob_req
    ue_nas1_action = null_action
    UE_NAS1_T62 = TRUE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'll_s1')
('public_key_response_sm_confirm', 'null_action')
key_exchange
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s2', 'll_s1')
('null_action', 'null_action')
pair_oob_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('public_key_response_sm_confirm', 'null_action')
smp_s2
ll_s1
#### offen_state =2 #######
('public_key_response_sm_confirm', 'null_action')
key_exchange
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
key_exchange
input list
['con_timeout_zero_req', 'pair_req', 'key_exchange']
key_exchange
output_list line 448:
[con_timeout_zero_req pair_req key_exchange / null_action pair_resp public_key_response_sm_confirm] [con_timeout_zero_req pair_req key_exchange / null_action null_action null_action]
smp_s1
ll_s1
key_exchange
null_action
need to replace to: public_key_response_sm_confirm
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_timeout_zero_req pair_req key_exchange / null_action pair_resp public_key_response_sm_confirm] [con_timeout_zero_req pair_req key_exchange / null_action null_action null_action]']
 ########## Equivalence Checking for <output1: null_action, output2: pair_resp> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = pair_oob_req & ue_nas1_action = null_action) & ue_nas2_action = pair_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T7 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = pair_oob_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T31 = TRUE
    UE_NAS2_T17 = FALSE
    UE_NAS1_T17 = FALSE
  -- Loop starts here
  -> State: 1.4 <-
    ue_nas1_action = null_action
    ue_nas2_action = pair_resp
  -> State: 1.5 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
pair_oob_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('null_action', 'pair_resp')
pair_oob_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('null_action', 'pair_resp')
ll_s1
ll_s2
#### offen_state =2 #######
('null_action', 'pair_resp')
pair_oob_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
pair_oob_req
input list
['con_timeout_zero_req', 'version_req', 'pair_oob_req']
pair_oob_req
output_list line 448:
[con_timeout_zero_req version_req pair_oob_req / null_action version_resp null_action] [con_timeout_zero_req version_req pair_oob_req / null_action version_resp pair_resp]
ll_s1
ll_s2
pair_oob_req
pair_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = pair_oob_req & ue_nas1_action = null_action) & ue_nas2_action = pair_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T7 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = pair_oob_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T31 = TRUE
    UE_NAS2_T17 = FALSE
    UE_NAS1_T17 = FALSE
  -- Loop starts here
  -> State: 1.4 <-
    ue_nas1_action = null_action
    ue_nas2_action = pair_resp
  -> State: 1.5 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
pair_oob_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('null_action', 'pair_resp')
pair_oob_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('null_action', 'pair_resp')
ll_s1
ll_s2
#### offen_state =2 #######
('null_action', 'pair_resp')
pair_oob_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
pair_oob_req
input list
['con_timeout_zero_req', 'version_req', 'pair_oob_req']
pair_oob_req
output_list line 448:
[con_timeout_zero_req version_req pair_oob_req / null_action version_resp null_action] [con_timeout_zero_req version_req pair_oob_req / null_action version_resp pair_resp]
ll_s1
ll_s2
pair_oob_req
pair_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_timeout_zero_req version_req pair_oob_req / null_action version_resp null_action] [con_timeout_zero_req version_req pair_oob_req / null_action version_resp pair_resp]']
 ########## Equivalence Checking for <output1: pair_resp, output2: null_action> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- LTL specification  G !((input = pair_oob_req & ue_nas1_action = pair_resp) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = pair_oob_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS1_T42 = TRUE
    UE_NAS1_T20 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
pair_oob_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
#### offen_state =1 #######
('pair_resp', 'null_action')
pair_keyboard_display_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
pair_oob_req
input list
['con_timeout_zero_req', 'pair_keyboard_display_req']
pair_keyboard_display_req
ll_s1
ll_s1
pair_oob_req
null_action
need to replace to: pair_resp
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- LTL specification  G !((input = pair_oob_req & ue_nas1_action = pair_resp) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = pair_oob_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS1_T42 = TRUE
    UE_NAS1_T20 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
pair_oob_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
#### offen_state =1 #######
('pair_resp', 'null_action')
pair_keyboard_display_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
pair_oob_req
input list
['con_timeout_zero_req', 'pair_keyboard_display_req']
pair_keyboard_display_req
ll_s1
ll_s1
pair_oob_req
null_action
need to replace to: pair_resp
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
[]
 ########## Equivalence Checking for <output1: null_action, output2: version_resp> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- LTL specification  G !((input = version_max_len_req & ue_nas1_action = null_action) & ue_nas2_action = version_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T5 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = version_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T17 = TRUE
    UE_NAS1_T20 = FALSE
  -> State: 1.4 <-
    input = version_max_len_req
    ue_nas1_action = null_action
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T17 = FALSE
  -> State: 1.5 <-
    input = feature_req
    ue_nas2_action = null_action
    UE_NAS2_T19 = TRUE
  -> State: 1.6 <-
    input = sm_random_send
    ue_nas2_action = feature_resp
    UE_NAS2_T19 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s2')
('null_action', 'version_resp')
version_max_len_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s2')
('null_action', 'null_action')
feature_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s2')
('null_action', 'feature_resp')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'version_resp')
smp_s1
ll_s2
#### offen_state =2 #######
('null_action', 'version_resp')
version_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
version_max_len_req
input list
['con_req', 'pair_keyboard_display_req', 'version_req']
version_req
smp_s1
ll_s2
version_max_len_req
version_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- LTL specification  G !((input = version_max_len_req & ue_nas1_action = null_action) & ue_nas2_action = version_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T5 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = version_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T17 = TRUE
    UE_NAS1_T20 = FALSE
  -> State: 1.4 <-
    input = version_max_len_req
    ue_nas1_action = null_action
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T17 = FALSE
  -> State: 1.5 <-
    input = feature_req
    ue_nas2_action = null_action
    UE_NAS2_T19 = TRUE
  -> State: 1.6 <-
    input = sm_random_send
    ue_nas2_action = feature_resp
    UE_NAS2_T19 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s2')
('null_action', 'version_resp')
version_max_len_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s2')
('null_action', 'null_action')
feature_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s2')
('null_action', 'feature_resp')
sm_random_send
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'version_resp')
smp_s1
ll_s2
#### offen_state =2 #######
('null_action', 'version_resp')
version_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
version_max_len_req
input list
['con_req', 'pair_keyboard_display_req', 'version_req']
version_req
smp_s1
ll_s2
version_max_len_req
version_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
[]
 ########## Equivalence Checking for <output1: version_resp, output2: null_action> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- LTL specification  G !((input = version_max_len_req & ue_nas1_action = version_resp) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = version_max_len_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T5 = FALSE
    UE_NAS1_T18 = TRUE
    UE_NAS1_T5 = FALSE
  -- Loop starts here
  -> State: 1.3 <-
    ue_nas1_action = version_resp
  -> State: 1.4 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_max_len_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('version_resp', 'null_action')
version_max_len_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'null_action')
ll_s1
ll_s1
#### offen_state =1 #######
('version_resp', 'null_action')
version_max_len_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
version_max_len_req
input list
['con_req', 'version_max_len_req']
version_max_len_req
output_list line 448:
[con_req version_max_len_req / null_action version_resp] [con_req version_max_len_req / null_action null_action]
ll_s1
ll_s1
version_max_len_req
null_action
need to replace to: version_resp
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];

$$$$$$$$$$$$$$$$$$$$$$^^^^^^^^^^^^^^^^^^^
	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];

$$$$$$$$$$$$$$$$
	ll_s1 -> ll_s1 [label="version_max_len_req / version_resp"];

$$$$$$$$$$$$$$$$$$$$$$<<<<<<<<<<<<<<<<<<<<<<


	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = version_max_len_req & ue_nas1_action = version_resp) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T18 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = version_max_len_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T17 = FALSE
    UE_NAS1_T18 = TRUE
    UE_NAS1_T17 = FALSE
  -> State: 1.4 <-
    input = version_req
    ue_nas2_action = null_action
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = TRUE
  -> State: 1.5 <-
    input = version_max_len_req
    UE_NAS1_T18 = TRUE
    UE_NAS1_T17 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
version_max_len_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'null_action')
version_max_len_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('version_resp', 'null_action')
ll_s1
ll_s2
('version_resp', 'null_action')
ll_s1
ll_s2
#### offen_state =3 #######
('version_resp', 'null_action')
version_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
version_max_len_req
input list
['con_req', 'version_req', 'version_max_len_req', 'version_req']
version_req
ll_s1
ll_s2
version_max_len_req
null_action
need to replace to: version_resp
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / version_resp"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = version_max_len_req & ue_nas1_action = version_resp) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T18 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = version_max_len_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T17 = FALSE
    UE_NAS1_T18 = TRUE
    UE_NAS1_T17 = FALSE
  -> State: 1.4 <-
    input = version_req
    ue_nas2_action = null_action
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = TRUE
  -> State: 1.5 <-
    input = version_max_len_req
    UE_NAS1_T18 = TRUE
    UE_NAS1_T17 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
version_max_len_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'null_action')
version_max_len_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('version_resp', 'null_action')
ll_s1
ll_s2
('version_resp', 'null_action')
ll_s1
ll_s2
#### offen_state =3 #######
('version_resp', 'null_action')
version_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
version_max_len_req
input list
['con_req', 'version_req', 'version_max_len_req', 'version_req']
version_req
ll_s1
ll_s2
version_max_len_req
null_action
need to replace to: version_resp
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / version_resp"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_req version_max_len_req / null_action version_resp] [con_req version_max_len_req / null_action null_action]']
 ########## Equivalence Checking for <output1: null_action, output2: version_resp> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- LTL specification  G !((input = version_req & ue_nas1_action = null_action) & ue_nas2_action = version_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = pair_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T5 = FALSE
    UE_NAS1_T19 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = version_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T17 = TRUE
    UE_NAS1_T19 = FALSE
  -> State: 1.4 <-
    ue_nas1_action = null_action
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T17 = FALSE
  -> State: 1.5 <-
    input = feature_req
    ue_nas2_action = null_action
    UE_NAS2_T19 = TRUE
  -> State: 1.6 <-
    input = version_max_len_req
    ue_nas2_action = feature_resp
    UE_NAS2_T19 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s2')
('null_action', 'version_resp')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s2')
('null_action', 'null_action')
feature_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s2')
('null_action', 'feature_resp')
version_max_len_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'version_resp')
smp_s1
ll_s2
#### offen_state =2 #######
('null_action', 'version_resp')
version_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
version_req
input list
['con_req', 'pair_req', 'version_req']
version_req
output_list line 448:
[con_req pair_req version_req / null_action pair_resp null_action] [con_req pair_req version_req / null_action null_action version_resp]
smp_s1
ll_s2
version_req
version_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- LTL specification  G !((input = version_req & ue_nas1_action = null_action) & ue_nas2_action = version_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = pair_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T5 = FALSE
    UE_NAS1_T19 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = version_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T17 = TRUE
    UE_NAS1_T19 = FALSE
  -> State: 1.4 <-
    ue_nas1_action = null_action
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T17 = FALSE
  -> State: 1.5 <-
    input = feature_req
    ue_nas2_action = null_action
    UE_NAS2_T19 = TRUE
  -> State: 1.6 <-
    input = version_max_len_req
    ue_nas2_action = feature_resp
    UE_NAS2_T19 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s2')
('null_action', 'version_resp')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s2')
('null_action', 'null_action')
feature_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s2')
('null_action', 'feature_resp')
version_max_len_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'version_resp')
smp_s1
ll_s2
#### offen_state =2 #######
('null_action', 'version_resp')
version_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
version_req
input list
['con_req', 'pair_req', 'version_req']
version_req
output_list line 448:
[con_req pair_req version_req / null_action pair_resp null_action] [con_req pair_req version_req / null_action null_action version_resp]
smp_s1
ll_s2
version_req
version_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_req pair_req version_req / null_action pair_resp null_action] [con_req pair_req version_req / null_action null_action version_resp]']
 ########## Equivalence Checking for <output1: version_resp, output2: null_action> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- LTL specification  G !((input = version_req & ue_nas1_action = version_resp) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = version_max_len_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T18 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = version_req
    ue_nas1_action = version_resp
    UE_NAS2_T17 = TRUE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = TRUE
  -> State: 1.4 <-
    input = con_req
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T23 = TRUE
    UE_NAS2_T17 = FALSE
    UE_NAS1_T17 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_max_len_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('version_resp', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
con_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'null_action')
ll_s1
ll_s1
#### offen_state =1 #######
('version_resp', 'null_action')
version_max_len_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
version_req
input list
['con_timeout_zero_req', 'version_max_len_req']
version_max_len_req
ll_s1
ll_s1
version_req
null_action
need to replace to: version_resp
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- LTL specification  G !((input = version_req & ue_nas1_action = version_resp) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = version_max_len_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T18 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = version_req
    ue_nas1_action = version_resp
    UE_NAS2_T17 = TRUE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = TRUE
  -> State: 1.4 <-
    input = con_req
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T23 = TRUE
    UE_NAS2_T17 = FALSE
    UE_NAS1_T17 = FALSE

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_max_len_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('version_resp', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
con_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'null_action')
ll_s1
ll_s1
#### offen_state =1 #######
('version_resp', 'null_action')
version_max_len_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
version_req
input list
['con_timeout_zero_req', 'version_max_len_req']
version_max_len_req
ll_s1
ll_s1
version_req
null_action
need to replace to: version_resp
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
[]
 ########## Equivalence Checking for <output1: null_action, output2: pri_resp> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = pri_req & ue_nas1_action = null_action) & ue_nas2_action = pri_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T19 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = pri_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T13 = TRUE
    UE_NAS1_T19 = FALSE
  -- Loop starts here
  -> State: 1.4 <-
    ue_nas1_action = null_action
    ue_nas2_action = pri_resp
  -> State: 1.5 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
pri_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('null_action', 'pri_resp')
pri_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'pri_resp')
smp_s1
ll_s1
#### offen_state =2 #######
('null_action', 'pri_resp')
pri_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
pri_req
input list
['con_timeout_zero_req', 'pair_req', 'pri_req']
pri_req
output_list line 448:
[con_timeout_zero_req pair_req pri_req / null_action pair_resp null_action] [con_timeout_zero_req pair_req pri_req / null_action null_action pri_resp]
smp_s1
ll_s1
pri_req
pri_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = pri_req & ue_nas1_action = null_action) & ue_nas2_action = pri_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T19 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = pri_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T13 = TRUE
    UE_NAS1_T19 = FALSE
  -- Loop starts here
  -> State: 1.4 <-
    ue_nas1_action = null_action
    ue_nas2_action = pri_resp
  -> State: 1.5 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
pri_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('null_action', 'pri_resp')
pri_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'pri_resp')
smp_s1
ll_s1
#### offen_state =2 #######
('null_action', 'pri_resp')
pri_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
pri_req
input list
['con_timeout_zero_req', 'pair_req', 'pri_req']
pri_req
output_list line 448:
[con_timeout_zero_req pair_req pri_req / null_action pair_resp null_action] [con_timeout_zero_req pair_req pri_req / null_action null_action pri_resp]
smp_s1
ll_s1
pri_req
pri_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_timeout_zero_req pair_req pri_req / null_action pair_resp null_action] [con_timeout_zero_req pair_req pri_req / null_action null_action pri_resp]']
 ########## Equivalence Checking for <output1: pri_resp, output2: null_action> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- LTL specification  G !((input = pri_req & ue_nas1_action = pri_resp) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = pair_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T5 = FALSE
    UE_NAS1_T19 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = con_interval_zero_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T15 = TRUE
    UE_NAS1_T19 = FALSE
  -> State: 1.4 <-
    input = pair_key_zero_req
    ue_nas1_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T15 = FALSE
    UE_NAS1_T46 = TRUE
  -> State: 1.5 <-
    input = pri_req
    ue_nas1_state = ll_s1
    UE_NAS1_T46 = FALSE
    UE_NAS1_T13 = TRUE
  -- Loop starts here
  -> State: 1.6 <-
    ue_nas1_action = pri_resp
  -> State: 1.7 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
con_interval_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s0')
('null_action', 'null_action')
pair_key_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s0')
('null_action', 'null_action')
pri_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s0')
('pri_resp', 'null_action')
pri_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'null_action')
smp_s1
ll_s0
('null_action', 'null_action')
ll_s1
ll_s0
('pri_resp', 'null_action')
ll_s1
ll_s0
#### offen_state =4 #######
('pri_resp', 'null_action')
pri_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
pri_req
input list
['con_req', 'pair_req', 'con_interval_zero_req', 'pair_key_zero_req', 'pri_req']
pri_req
output_list line 448:
[con_req pair_req con_interval_zero_req pair_key_zero_req pri_req / null_action pair_resp null_action null_action pri_resp] [con_req pair_req con_interval_zero_req pair_key_zero_req pri_req / null_action null_action null_action null_action null_action]
ll_s1
ll_s0
pri_req
null_action
need to replace to: pri_resp
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- LTL specification  G !((input = pri_req & ue_nas1_action = pri_resp) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = pair_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T5 = FALSE
    UE_NAS1_T19 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = con_interval_zero_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T15 = TRUE
    UE_NAS1_T19 = FALSE
  -> State: 1.4 <-
    input = pair_key_zero_req
    ue_nas1_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T15 = FALSE
    UE_NAS1_T46 = TRUE
  -> State: 1.5 <-
    input = pri_req
    ue_nas1_state = ll_s1
    UE_NAS1_T46 = FALSE
    UE_NAS1_T13 = TRUE
  -- Loop starts here
  -> State: 1.6 <-
    ue_nas1_action = pri_resp
  -> State: 1.7 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
con_interval_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s0')
('null_action', 'null_action')
pair_key_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s0')
('null_action', 'null_action')
pri_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s0')
('pri_resp', 'null_action')
pri_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'null_action')
smp_s1
ll_s0
('null_action', 'null_action')
ll_s1
ll_s0
('pri_resp', 'null_action')
ll_s1
ll_s0
#### offen_state =4 #######
('pri_resp', 'null_action')
pri_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
pri_req
input list
['con_req', 'pair_req', 'con_interval_zero_req', 'pair_key_zero_req', 'pri_req']
pri_req
output_list line 448:
[con_req pair_req con_interval_zero_req pair_key_zero_req pri_req / null_action pair_resp null_action null_action pri_resp] [con_req pair_req con_interval_zero_req pair_key_zero_req pri_req / null_action null_action null_action null_action null_action]
ll_s1
ll_s0
pri_req
null_action
need to replace to: pri_resp
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_req pair_req con_interval_zero_req pair_key_zero_req pri_req / null_action pair_resp null_action null_action pri_resp] [con_req pair_req con_interval_zero_req pair_key_zero_req pri_req / null_action null_action null_action null_action null_action]']
 ########## Equivalence Checking for <output1: null_action, output2: length_resp> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- LTL specification  G !((input = length_req & ue_nas1_action = null_action) & ue_nas2_action = length_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = length_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T12 = TRUE
    UE_NAS2_T7 = FALSE
    UE_NAS1_T7 = FALSE
  -- Loop starts here
  -> State: 1.3 <-
    ue_nas2_action = length_resp
  -> State: 1.4 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
length_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'length_resp')
length_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('null_action', 'length_resp')
ll_s1
ll_s1
#### offen_state =1 #######
('null_action', 'length_resp')
length_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
length_req
input list
['con_timeout_zero_req', 'length_req']
length_req
output_list line 448:
[con_timeout_zero_req length_req / null_action null_action] [con_timeout_zero_req length_req / null_action length_resp]
ll_s1
ll_s1
length_req
length_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

$$$$$$$$$$$$$$$$$$$$$$^^^^^^^^^^^^^^^^^^^
	ll_s1 -> ll_s1 [label="length_req / length_resp"];

$$$$$$$$$$$$$$$$
	ll_s1 -> ll_s1 [label="length_req / null_action"];

$$$$$$$$$$$$$$$$$$$$$$<<<<<<<<<<<<<<<<<<<<<<
	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = length_req & ue_nas1_action = null_action) & ue_nas2_action = length_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T7 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = length_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T21 = TRUE
    UE_NAS2_T17 = FALSE
    UE_NAS1_T17 = FALSE
  -- Loop starts here
  -> State: 1.4 <-
    ue_nas1_action = null_action
    ue_nas2_action = length_resp
  -> State: 1.5 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
length_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('null_action', 'length_resp')
length_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('null_action', 'length_resp')
ll_s1
ll_s2
#### offen_state =2 #######
('null_action', 'length_resp')
length_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
length_req
input list
['con_timeout_zero_req', 'version_req', 'length_req']
length_req
output_list line 448:
[con_timeout_zero_req version_req length_req / null_action version_resp null_action] [con_timeout_zero_req version_req length_req / null_action version_resp length_resp]
ll_s1
ll_s2
length_req
length_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / null_action"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = length_req & ue_nas1_action = null_action) & ue_nas2_action = length_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = version_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T17 = TRUE
    UE_NAS2_T7 = FALSE
    UE_NAS1_T17 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = length_req
    ue_nas1_action = version_resp
    ue_nas2_action = version_resp
    ue_nas2_state = ll_s2
    UE_NAS2_T21 = TRUE
    UE_NAS2_T17 = FALSE
    UE_NAS1_T17 = FALSE
  -- Loop starts here
  -> State: 1.4 <-
    ue_nas1_action = null_action
    ue_nas2_action = length_resp
  -> State: 1.5 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
version_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('version_resp', 'version_resp')
length_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s2')
('null_action', 'length_resp')
length_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('version_resp', 'version_resp')
ll_s1
ll_s2
('null_action', 'length_resp')
ll_s1
ll_s2
#### offen_state =2 #######
('null_action', 'length_resp')
length_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
length_req
input list
['con_timeout_zero_req', 'version_req', 'length_req']
length_req
output_list line 448:
[con_timeout_zero_req version_req length_req / null_action version_resp null_action] [con_timeout_zero_req version_req length_req / null_action version_resp length_resp]
ll_s1
ll_s2
length_req
length_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / null_action"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_timeout_zero_req length_req / null_action null_action] [con_timeout_zero_req length_req / null_action length_resp]', '[con_timeout_zero_req version_req length_req / null_action version_resp null_action] [con_timeout_zero_req version_req length_req / null_action version_resp length_resp]']
 ########## Equivalence Checking for <output1: length_resp, output2: null_action> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- LTL specification  G !((input = length_req & ue_nas1_action = length_resp) & ue_nas2_action = null_action)  is true

out in iterative_checker
[]
 ########## Equivalence Checking for <output1: null_action, output2: mtu_resp> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = mtu_req & ue_nas1_action = null_action) & ue_nas2_action = mtu_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = mtu_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T11 = TRUE
    UE_NAS1_T20 = FALSE
  -- Loop starts here
  -> State: 1.4 <-
    ue_nas1_action = null_action
    ue_nas2_action = mtu_resp
  -> State: 1.5 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
mtu_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('null_action', 'mtu_resp')
mtu_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'mtu_resp')
smp_s1
ll_s1
#### offen_state =2 #######
('null_action', 'mtu_resp')
mtu_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
mtu_req
input list
['con_timeout_zero_req', 'pair_keyboard_display_req', 'mtu_req']
mtu_req
output_list line 448:
[con_timeout_zero_req pair_keyboard_display_req mtu_req / null_action pair_resp null_action] [con_timeout_zero_req pair_keyboard_display_req mtu_req / null_action null_action mtu_resp]
smp_s1
ll_s1
mtu_req
mtu_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = mtu_req & ue_nas1_action = null_action) & ue_nas2_action = mtu_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = mtu_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T11 = TRUE
    UE_NAS1_T20 = FALSE
  -- Loop starts here
  -> State: 1.4 <-
    ue_nas1_action = null_action
    ue_nas2_action = mtu_resp
  -> State: 1.5 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
mtu_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('null_action', 'mtu_resp')
mtu_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'mtu_resp')
smp_s1
ll_s1
#### offen_state =2 #######
('null_action', 'mtu_resp')
mtu_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
mtu_req
input list
['con_timeout_zero_req', 'pair_keyboard_display_req', 'mtu_req']
mtu_req
output_list line 448:
[con_timeout_zero_req pair_keyboard_display_req mtu_req / null_action pair_resp null_action] [con_timeout_zero_req pair_keyboard_display_req mtu_req / null_action null_action mtu_resp]
smp_s1
ll_s1
mtu_req
mtu_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_timeout_zero_req pair_keyboard_display_req mtu_req / null_action pair_resp null_action] [con_timeout_zero_req pair_keyboard_display_req mtu_req / null_action null_action mtu_resp]']
 ########## Equivalence Checking for <output1: mtu_resp, output2: null_action> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- LTL specification  G !((input = mtu_req & ue_nas1_action = mtu_resp) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T5 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = con_interval_zero_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T15 = TRUE
    UE_NAS1_T20 = FALSE
  -> State: 1.4 <-
    input = pair_key_zero_req
    ue_nas1_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T15 = FALSE
    UE_NAS1_T46 = TRUE
  -> State: 1.5 <-
    input = mtu_req
    ue_nas1_state = ll_s1
    UE_NAS1_T46 = FALSE
    UE_NAS1_T11 = TRUE
  -- Loop starts here
  -> State: 1.6 <-
    ue_nas1_action = mtu_resp
  -> State: 1.7 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
con_interval_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s0')
('null_action', 'null_action')
pair_key_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s0')
('null_action', 'null_action')
mtu_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s0')
('mtu_resp', 'null_action')
mtu_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'null_action')
smp_s1
ll_s0
('null_action', 'null_action')
ll_s1
ll_s0
('mtu_resp', 'null_action')
ll_s1
ll_s0
#### offen_state =4 #######
('mtu_resp', 'null_action')
mtu_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
mtu_req
input list
['con_req', 'pair_keyboard_display_req', 'con_interval_zero_req', 'pair_key_zero_req', 'mtu_req']
mtu_req
output_list line 448:
[con_req pair_keyboard_display_req con_interval_zero_req pair_key_zero_req mtu_req / null_action pair_resp null_action null_action mtu_resp] [con_req pair_keyboard_display_req con_interval_zero_req pair_key_zero_req mtu_req / null_action null_action null_action null_action null_action]
ll_s1
ll_s0
mtu_req
null_action
need to replace to: mtu_resp
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- LTL specification  G !((input = mtu_req & ue_nas1_action = mtu_resp) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = FALSE
    UE_NAS2_T5 = TRUE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = FALSE
    UE_NAS1_T5 = TRUE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T5 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.3 <-
    input = con_interval_zero_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T15 = TRUE
    UE_NAS1_T20 = FALSE
  -> State: 1.4 <-
    input = pair_key_zero_req
    ue_nas1_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T15 = FALSE
    UE_NAS1_T46 = TRUE
  -> State: 1.5 <-
    input = mtu_req
    ue_nas1_state = ll_s1
    UE_NAS1_T46 = FALSE
    UE_NAS1_T11 = TRUE
  -- Loop starts here
  -> State: 1.6 <-
    ue_nas1_action = mtu_resp
  -> State: 1.7 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
con_interval_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s0')
('null_action', 'null_action')
pair_key_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s0')
('null_action', 'null_action')
mtu_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s0')
('mtu_resp', 'null_action')
mtu_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'null_action')
smp_s1
ll_s0
('null_action', 'null_action')
ll_s1
ll_s0
('mtu_resp', 'null_action')
ll_s1
ll_s0
#### offen_state =4 #######
('mtu_resp', 'null_action')
mtu_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
mtu_req
input list
['con_req', 'pair_keyboard_display_req', 'con_interval_zero_req', 'pair_key_zero_req', 'mtu_req']
mtu_req
output_list line 448:
[con_req pair_keyboard_display_req con_interval_zero_req pair_key_zero_req mtu_req / null_action pair_resp null_action null_action mtu_resp] [con_req pair_keyboard_display_req con_interval_zero_req pair_key_zero_req mtu_req / null_action null_action null_action null_action null_action]
ll_s1
ll_s0
mtu_req
null_action
need to replace to: mtu_resp
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_req pair_keyboard_display_req con_interval_zero_req pair_key_zero_req mtu_req / null_action pair_resp null_action null_action mtu_resp] [con_req pair_keyboard_display_req con_interval_zero_req pair_key_zero_req mtu_req / null_action null_action null_action null_action null_action]']
 ########## Equivalence Checking for <output1: null_action, output2: feature_resp> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = feature_req & ue_nas1_action = null_action) & ue_nas2_action = feature_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = feature_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T10 = TRUE
    UE_NAS1_T20 = FALSE
  -- Loop starts here
  -> State: 1.4 <-
    ue_nas1_action = null_action
    ue_nas2_action = feature_resp
  -> State: 1.5 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
feature_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('null_action', 'feature_resp')
feature_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'feature_resp')
smp_s1
ll_s1
#### offen_state =2 #######
('null_action', 'feature_resp')
feature_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
feature_req
input list
['con_timeout_zero_req', 'pair_keyboard_display_req', 'feature_req']
feature_req
output_list line 448:
[con_timeout_zero_req pair_keyboard_display_req feature_req / null_action pair_resp null_action] [con_timeout_zero_req pair_keyboard_display_req feature_req / null_action null_action feature_resp]
smp_s1
ll_s1
feature_req
feature_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- LTL specification  G !((input = feature_req & ue_nas1_action = null_action) & ue_nas2_action = feature_resp)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = feature_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T10 = TRUE
    UE_NAS1_T20 = FALSE
  -- Loop starts here
  -> State: 1.4 <-
    ue_nas1_action = null_action
    ue_nas2_action = feature_resp
  -> State: 1.5 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
feature_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('null_action', 'feature_resp')
feature_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'feature_resp')
smp_s1
ll_s1
#### offen_state =2 #######
('null_action', 'feature_resp')
feature_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
feature_req
input list
['con_timeout_zero_req', 'pair_keyboard_display_req', 'feature_req']
feature_req
output_list line 448:
[con_timeout_zero_req pair_keyboard_display_req feature_req / null_action pair_resp null_action] [con_timeout_zero_req pair_keyboard_display_req feature_req / null_action null_action feature_resp]
smp_s1
ll_s1
feature_req
feature_resp
need to replace to: null_action
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_timeout_zero_req pair_keyboard_display_req feature_req / null_action pair_resp null_action] [con_timeout_zero_req pair_keyboard_display_req feature_req / null_action null_action feature_resp]']
 ########## Equivalence Checking for <output1: feature_resp, output2: null_action> diversity class ############
*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- LTL specification  G !((input = feature_req & ue_nas1_action = feature_resp) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = con_interval_zero_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T15 = TRUE
    UE_NAS1_T20 = FALSE
  -> State: 1.4 <-
    input = pair_oob_req
    ue_nas1_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T15 = FALSE
    UE_NAS1_T42 = TRUE
  -> State: 1.5 <-
    input = feature_req
    ue_nas1_state = ll_s1
    UE_NAS1_T42 = FALSE
    UE_NAS1_T10 = TRUE
  -- Loop starts here
  -> State: 1.6 <-
    ue_nas1_action = feature_resp
  -> State: 1.7 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
con_interval_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s0')
('null_action', 'null_action')
pair_oob_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s0')
('null_action', 'null_action')
feature_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s0')
('feature_resp', 'null_action')
feature_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'null_action')
smp_s1
ll_s0
('null_action', 'null_action')
ll_s1
ll_s0
('feature_resp', 'null_action')
ll_s1
ll_s0
#### offen_state =4 #######
('feature_resp', 'null_action')
feature_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
feature_req
input list
['con_timeout_zero_req', 'pair_keyboard_display_req', 'con_interval_zero_req', 'pair_oob_req', 'feature_req']
feature_req
output_list line 448:
[con_timeout_zero_req pair_keyboard_display_req con_interval_zero_req pair_oob_req feature_req / null_action pair_resp null_action null_action feature_resp] [con_timeout_zero_req pair_keyboard_display_req con_interval_zero_req pair_oob_req feature_req / null_action null_action null_action null_action null_action]
ll_s1
ll_s0
feature_req
null_action
need to replace to: feature_resp
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

*** This is nuXmv 1.1.1 (compiled on Wed Jun  1 10:18:42 2016)
*** Copyright (c) 2014-2016, Fondazione Bruno Kessler

*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2014, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2016 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2016 by University of Trento
*** See http://mathsat.fbk.eu

-- no proof or counterexample found with bound 4
-- no proof or counterexample found with bound 5
-- no proof or counterexample found with bound 6
-- no proof or counterexample found with bound 7
-- no proof or counterexample found with bound 8
-- LTL specification  G !((input = feature_req & ue_nas1_action = feature_resp) & ue_nas2_action = null_action)  is false
-- as demonstrated by the following execution sequence
Trace Description: IC3 counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    input = con_timeout_zero_req
    ue_nas1_state = ll_s0
    ue_nas1_action = null_action
    ue_nas2_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T112 = FALSE
    UE_NAS2_T109 = FALSE
    UE_NAS2_T108 = FALSE
    UE_NAS2_T107 = FALSE
    UE_NAS2_T101 = FALSE
    UE_NAS2_T100 = FALSE
    UE_NAS2_T99 = FALSE
    UE_NAS2_T98 = FALSE
    UE_NAS2_T97 = FALSE
    UE_NAS2_T96 = FALSE
    UE_NAS2_T95 = FALSE
    UE_NAS2_T94 = FALSE
    UE_NAS2_T93 = FALSE
    UE_NAS2_T92 = FALSE
    UE_NAS2_T91 = FALSE
    UE_NAS2_T90 = FALSE
    UE_NAS2_T89 = FALSE
    UE_NAS2_T88 = FALSE
    UE_NAS2_T87 = FALSE
    UE_NAS2_T81 = FALSE
    UE_NAS2_T80 = FALSE
    UE_NAS2_T79 = FALSE
    UE_NAS2_T78 = FALSE
    UE_NAS2_T77 = FALSE
    UE_NAS2_T76 = FALSE
    UE_NAS2_T75 = FALSE
    UE_NAS2_T74 = FALSE
    UE_NAS2_T73 = FALSE
    UE_NAS2_T72 = FALSE
    UE_NAS2_T71 = FALSE
    UE_NAS2_T70 = FALSE
    UE_NAS2_T69 = FALSE
    UE_NAS2_T68 = FALSE
    UE_NAS2_T67 = FALSE
    UE_NAS2_T61 = FALSE
    UE_NAS2_T60 = FALSE
    UE_NAS2_T59 = FALSE
    UE_NAS2_T58 = FALSE
    UE_NAS2_T57 = FALSE
    UE_NAS2_T56 = FALSE
    UE_NAS2_T55 = FALSE
    UE_NAS2_T54 = FALSE
    UE_NAS2_T53 = FALSE
    UE_NAS2_T52 = FALSE
    UE_NAS2_T51 = FALSE
    UE_NAS2_T50 = FALSE
    UE_NAS2_T49 = FALSE
    UE_NAS2_T48 = FALSE
    UE_NAS2_T34 = FALSE
    UE_NAS2_T33 = FALSE
    UE_NAS2_T32 = FALSE
    UE_NAS2_T31 = FALSE
    UE_NAS2_T30 = FALSE
    UE_NAS2_T29 = FALSE
    UE_NAS2_T28 = FALSE
    UE_NAS2_T25 = FALSE
    UE_NAS2_T24 = FALSE
    UE_NAS2_T23 = FALSE
    UE_NAS2_T22 = FALSE
    UE_NAS2_T21 = FALSE
    UE_NAS2_T20 = FALSE
    UE_NAS2_T19 = FALSE
    UE_NAS2_T17 = FALSE
    UE_NAS2_T15 = FALSE
    UE_NAS2_T13 = FALSE
    UE_NAS2_T12 = FALSE
    UE_NAS2_T11 = FALSE
    UE_NAS2_T10 = FALSE
    UE_NAS2_T7 = TRUE
    UE_NAS2_T5 = FALSE
    UE_NAS1_T100 = FALSE
    UE_NAS1_T99 = FALSE
    UE_NAS1_T95 = FALSE
    UE_NAS1_T92 = FALSE
    UE_NAS1_T90 = FALSE
    UE_NAS1_T89 = FALSE
    UE_NAS1_T86 = FALSE
    UE_NAS1_T85 = FALSE
    UE_NAS1_T84 = FALSE
    UE_NAS1_T83 = FALSE
    UE_NAS1_T82 = FALSE
    UE_NAS1_T81 = FALSE
    UE_NAS1_T80 = FALSE
    UE_NAS1_T79 = FALSE
    UE_NAS1_T75 = FALSE
    UE_NAS1_T70 = FALSE
    UE_NAS1_T68 = FALSE
    UE_NAS1_T66 = FALSE
    UE_NAS1_T65 = FALSE
    UE_NAS1_T64 = FALSE
    UE_NAS1_T63 = FALSE
    UE_NAS1_T62 = FALSE
    UE_NAS1_T61 = FALSE
    UE_NAS1_T60 = FALSE
    UE_NAS1_T59 = FALSE
    UE_NAS1_T55 = FALSE
    UE_NAS1_T51 = FALSE
    UE_NAS1_T50 = FALSE
    UE_NAS1_T47 = FALSE
    UE_NAS1_T46 = FALSE
    UE_NAS1_T45 = FALSE
    UE_NAS1_T44 = FALSE
    UE_NAS1_T43 = FALSE
    UE_NAS1_T42 = FALSE
    UE_NAS1_T41 = FALSE
    UE_NAS1_T40 = FALSE
    UE_NAS1_T39 = FALSE
    UE_NAS1_T25 = FALSE
    UE_NAS1_T24 = FALSE
    UE_NAS1_T23 = FALSE
    UE_NAS1_T21 = FALSE
    UE_NAS1_T20 = FALSE
    UE_NAS1_T19 = FALSE
    UE_NAS1_T18 = FALSE
    UE_NAS1_T17 = FALSE
    UE_NAS1_T15 = FALSE
    UE_NAS1_T13 = FALSE
    UE_NAS1_T11 = FALSE
    UE_NAS1_T10 = FALSE
    UE_NAS1_T7 = TRUE
    UE_NAS1_T5 = FALSE
  -> State: 1.2 <-
    input = pair_keyboard_display_req
    ue_nas1_state = ll_s1
    ue_nas2_state = ll_s1
    UE_NAS2_T7 = FALSE
    UE_NAS1_T20 = TRUE
    UE_NAS1_T7 = FALSE
  -> State: 1.3 <-
    input = con_interval_zero_req
    ue_nas1_state = smp_s1
    ue_nas1_action = pair_resp
    UE_NAS2_T15 = TRUE
    UE_NAS1_T20 = FALSE
  -> State: 1.4 <-
    input = pair_oob_req
    ue_nas1_action = null_action
    ue_nas2_state = ll_s0
    UE_NAS2_T15 = FALSE
    UE_NAS1_T42 = TRUE
  -> State: 1.5 <-
    input = feature_req
    ue_nas1_state = ll_s1
    UE_NAS1_T42 = FALSE
    UE_NAS1_T10 = TRUE
  -- Loop starts here
  -> State: 1.6 <-
    ue_nas1_action = feature_resp
  -> State: 1.7 <-

VVVVVVVVVVVVVVVVV
('ll_s0', 'll_s0')
('null_action', 'null_action')
con_timeout_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s1')
('null_action', 'null_action')
pair_keyboard_display_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s1')
('pair_resp', 'null_action')
con_interval_zero_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('smp_s1', 'll_s0')
('null_action', 'null_action')
pair_oob_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s0')
('null_action', 'null_action')
feature_req
AAAAAAAAAAAAAAAAAAAA
VVVVVVVVVVVVVVVVV
('ll_s1', 'll_s0')
('feature_resp', 'null_action')
feature_req
AAAAAAAAAAAAAAAAAAAA
('null_action', 'null_action')
ll_s0
ll_s0
('null_action', 'null_action')
ll_s1
ll_s1
('pair_resp', 'null_action')
smp_s1
ll_s1
('null_action', 'null_action')
smp_s1
ll_s0
('null_action', 'null_action')
ll_s1
ll_s0
('feature_resp', 'null_action')
ll_s1
ll_s0
#### offen_state =4 #######
('feature_resp', 'null_action')
feature_req
input_condition $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
feature_req
input list
['con_timeout_zero_req', 'pair_keyboard_display_req', 'con_interval_zero_req', 'pair_oob_req', 'feature_req']
feature_req
output_list line 448:
[con_timeout_zero_req pair_keyboard_display_req con_interval_zero_req pair_oob_req feature_req / null_action pair_resp null_action null_action feature_resp] [con_timeout_zero_req pair_keyboard_display_req con_interval_zero_req pair_oob_req feature_req / null_action null_action null_action null_action null_action]
ll_s1
ll_s0
feature_req
null_action
need to replace to: feature_resp
digraph g {

__start0 [label="" shape="none"];



	ll_s0 [shape="circle" label="ll_s0"];

	ll_s1 [shape="circle" label="ll_s1"];

	ll_s2 [shape="circle" label="ll_s2"];

	smp_s1 [shape="circle" label="smp_s1"];

	smp_s2 [shape="circle" label="smp_s2"];

	smp_s3 [shape="circle" label="smp_s3"];

	recon_s0 [shape="circle" label="recon_s0"];

	recon_s1 [shape="circle" label="recon_s1"];



	ll_s0 -> ll_s0 [label="feature_req / null_action"];

	ll_s0 -> ll_s0 [label="mtu_req / null_action"];

	ll_s0 -> ll_s0 [label="length_req / null_action"];

	ll_s0 -> ll_s0 [label="pri_req / null_action"];

	ll_s0 -> ll_s1 [label="con_req / null_action"];

	ll_s0 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s0 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s0 -> ll_s0 [label="version_req / null_action"];

	ll_s0 -> ll_s0 [label="version_max_len_req / null_action"];



	ll_s1 -> ll_s1 [label="feature_req / feature_resp"];

	ll_s1 -> ll_s1 [label="mtu_req / mtu_resp"];

	ll_s1 -> ll_s1 [label="length_req / length_resp"];

	ll_s1 -> ll_s1 [label="pri_req / pri_resp"];

	ll_s1 -> ll_s1 [label="con_req / null_action"];

	ll_s1 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s1 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s1 -> ll_s2 [label="version_req / version_resp"];

	ll_s1 -> ll_s1 [label="version_max_len_req / null_action"];



	ll_s2 -> ll_s2 [label="feature_req / feature_resp"];

	ll_s2 -> ll_s2 [label="mtu_req / mtu_resp"];

	ll_s2 -> ll_s2 [label="length_req / length_resp"];

	ll_s2 -> ll_s2 [label="pri_req / pri_resp"];

	ll_s2 -> ll_s1 [label="con_req / null_action"];

	ll_s2 -> ll_s0 [label="con_interval_zero_req / null_action"];

	ll_s2 -> ll_s1 [label="con_timeout_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="version_req / null_action"];

	ll_s2 -> ll_s2 [label="version_max_len_req / null_action"];

	ll_s2 -> smp_s1 [label="pair_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	ll_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	ll_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	ll_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	ll_s2 -> ll_s2 [label="key_exchange / null_action"];

	ll_s2 -> ll_s2 [label="sm_random_send / null_action"];

	ll_s2 -> ll_s2 [label="dh_check / null_action"];

	ll_s2 -> ll_s2 [label="enc_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_resp / null_action"];

	ll_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	ll_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	ll_s2 -> ll_s2 [label="pair_confirm / null_action"];

	ll_s2 -> ll_s2 [label="pair_wrong_value_confirm / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="enc_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_resp / null_action"];

	ll_s2 -> ll_s2 [label="enc_plain_pause_req / null_action"];

	ll_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s1 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s1 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s1 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s1 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s1 -> smp_s2 [label="key_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s1 -> ll_s2 [label="dh_check / null_action"];

	smp_s1 -> ll_s2 [label="enc_req / null_action"];

	smp_s1 -> smp_s1 [label="start_enc_resp / null_action"];

	smp_s1 -> ll_s2 [label="key_invalid_exchange / public_key_response_sm_confirm"];

	smp_s1 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s1 -> smp_s1 [label="pair_confirm / null_action"];

	smp_s1 -> smp_s1 [label="pair_wrong_value_confirm / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_req / null_action"];

	smp_s1 -> smp_s1 [label="enc_pause_resp / null_action"];

	smp_s1 -> smp_s1 [label="enc_plain_pause_resp / null_action"];

	smp_s1 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s1 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s2 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s2 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s2 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s2 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s2 -> ll_s2 [label="key_exchange / null_action"];

	smp_s2 -> smp_s3 [label="sm_random_send / sm_random_received"];

	smp_s2 -> ll_s2 [label="dh_check / null_action"];

	smp_s2 -> ll_s2 [label="enc_req / null_action"];

	smp_s2 -> smp_s2 [label="start_enc_resp / null_action"];

	smp_s2 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s2 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s2 -> smp_s2 [label="pair_confirm / null_action"];

	smp_s2 -> smp_s2 [label="pair_wrong_value_confirm / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_req / null_action"];

	smp_s2 -> smp_s2 [label="enc_pause_resp / null_action"];

	smp_s2 -> smp_s2 [label="enc_plain_pause_resp / null_action"];

	smp_s2 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s2 -> ll_s2 [label="start_enc_plain_resp / null_action"];



	smp_s3 -> smp_s1 [label="pair_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_keyboard_display_req / pair_resp"];

	smp_s3 -> smp_s1 [label="pair_display_yes_no_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_oob_req / pair_resp"];

	smp_s3 -> ll_s2 [label="pair_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_keyboard_display_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_display_yes_no_no_sc_req / pair_resp_no_sc"];

	smp_s3 -> ll_s2 [label="pair_key_zero_req / null_action"];

	smp_s3 -> ll_s2 [label="key_exchange / null_action"];

	smp_s3 -> ll_s2 [label="sm_random_send / null_action"];

	smp_s3 -> ll_s2 [label="dh_check / dh_key_response"];

	smp_s3 -> ll_s2 [label="enc_req / null_action"];

	smp_s3 -> smp_s3 [label="start_enc_resp / null_action"];

	smp_s3 -> ll_s2 [label="key_invalid_exchange / null_action"];

	smp_s3 -> ll_s2 [label="dh_invalid_check / null_action"];

	smp_s3 -> smp_s3 [label="pair_confirm / null_action"];

	smp_s3 -> smp_s3 [label="pair_wrong_value_confirm / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_req / null_action"];

	smp_s3 -> smp_s3 [label="enc_pause_resp / null_action"];

	smp_s3 -> smp_s3 [label="enc_plain_pause_resp / null_action"];

	smp_s3 -> ll_s2 [label="enc_plain_pause_req / enc_pause_resp"];

	smp_s3 -> ll_s2 [label="start_enc_plain_resp / null_action"];

	smp_s3 -> recon_s0 [label="discon_req / null_action"];



	recon_s0 -> recon_s1 [label="enc_req / enc_resp_start_enc_req"];

	recon_s0 -> recon_s1 [label="start_enc_resp / null_action"];

	recon_s0 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s0 -> recon_s0 [label="enc_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_resp / null_action"];

	recon_s0 -> recon_s0 [label="enc_plain_pause_req / enc_pause_resp"];

	recon_s0 -> recon_s0 [label="start_enc_plain_resp / null_action"];



	recon_s1 -> recon_s1 [label="enc_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_resp / start_enc_resp"];

	recon_s1 -> recon_s1 [label="enc_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="enc_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_resp / null_action"];

	recon_s1 -> recon_s1 [label="enc_plain_pause_req / null_action"];

	recon_s1 -> recon_s1 [label="start_enc_plain_resp / null_action"];



__start0 -> ll_s0;

}

breaking two output same!!$$$$$$$$$$$$$$$&&&&&&&
out in iterative_checker
['[con_timeout_zero_req pair_keyboard_display_req con_interval_zero_req pair_oob_req feature_req / null_action pair_resp null_action null_action feature_resp] [con_timeout_zero_req pair_keyboard_display_req con_interval_zero_req pair_oob_req feature_req / null_action null_action null_action null_action null_action]']
--- 37.4355871677 seconds ---
